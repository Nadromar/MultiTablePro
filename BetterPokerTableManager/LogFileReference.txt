filters:
round 0, round -1 (seem to indicate flop/turn/river/deal)



MSG 0x1003
MSG_0x1001
MSG_0x1014
MSG_0x1024



Read any log files, count the lines and dismiss the first (amount of lines) from analysis

It seems that it can flip between log.1 and log.0 while ingame
Get a read on both files?

HandID in the log is not handID or timestamp
an example is HandID:AD573BC0 (decimal: 2908175296) while real hand id is near 196181817624
likely encoded or something? either way, useless.

Log does happily reflect the exact cards that come on the board in the form of 
:::TableViewImpl::updateBoard() 14s (0) [300B96] (14s being Ks, (0) indicating where to display a card)

It's also pooping out a lot of this:;
[2019/01/25 01:18:28]
-> MSG_0x1003-T 4325541271 00300B96
-> MSG_0x1014-T 4325541271 00300B96
-> MSG_0x1014-T 4325541271 00300B96

seems to indicate a message of some sort was received from server. (displays while sitting out on table)
4325541271 be used to ID the table it seems, one table always poops out the above, another poops out this.


[2019/01/25 01:20:01]
-> MSG_0x1003-T 4325529109 00031A20
-> MSG_0x1014-T 4325529109 00031A20
-> MSG_0x1014-T 4325529109 00031A20
^while waitign for BB (may or may not be indicated)


Message ID may be usable to identify the action a player made
nope, sticks to 1014 and 1003 regardless of the user action

The below chunk only pops when player is in a hand and has to make an acttion
When those conditions are met, it pops whenever a player makes an action.


 --- is a randiom player fold preflop
 configAdvActions 00031A20
box[ 1 ] 0
 act 'F' -1
box[ 4 ] 0
 act 'C' 5
box[ 5 ] 0
 act 'C' -1

-- This is a player opening 3bb
 configAdvActions 00031A20
box[ 1 ] 0
 act 'F' -1
box[ 4 ] 0
 act 'C' 10
box[ 5 ] 0
 act 'C' -1



 --- Full message when user folds
 [2019/01/25 01:30:58]
USR ACT button 'Fold' 00031A20
<- MSG_0x0008-T 4325529109 00031A20
18975 'F' 0 - 0
[2019/01/25 01:30:59]
-> MSG_0x0009-T 4325529109 00031A20
------ HandID: AD5FF572 0000002D
Table::OnPlayerCards, myCards.changed=0, n=0, flags=0
myCards.changed=1
-> MSG_0x1014-T 4325529109 00031A20
-> MSG_0x1003-T 4325529109 00031A20
-> MSG_0x0036-T 4325529109 00031A20
MyFoldedCard 0: c19 [31A20]
MyFoldedCard 1: c20 [31A20]
------ 00031A20
-> MSG_0x0014-T 4325529109 00031A20
configAdvActions 00031A20
-> MSG_0x0015-T 4325529109 00031A20
-> MSG_0x1014-T 4325529109 00031A20


---
00031A20 may ID the table, since it seems to reflect the message above's ID


-- (It's user's turn) (seems idendical to shit being spewed at random, escept for the timeout :/)
[2019/01/25 01:32:39]
configAdvActions 00031A20
-> MSG_0x1014-T 4325529109 00031A20


-- Running low on time
-> MSG_0x0021-T 4325529109 00031A20
time=30
-> MSG_0x0023-T 4325529109 00031A20


-- New hand rough chunk (i was HJ)
OnTableData() round -1
-> MSG_0x1014-T 4325529109 00031A20
[2019/01/25 01:38:05]
-> MSG_0x1003-T 4325529109 00031A20
-> MSG_0x1014-T 4325529109 00031A20
-> MSG_0x1014-T 4325529109 00031A20
-> MSG_0x1003-T 4325529109 00031A20
-> MSG_0x1004-T 4325529109 00031A20
  sit0  nCards=2
OnTableData() round 0
  sit1  nCards=2
  sit2  nCards=2
  sit3  nCards=2
  sit4  nCards=2
  sit5  nCards=2
  sit6  nCards=2
  sit7  nCards=2
  sit8  nCards=2
  dealerPos=8
TableAnimation::dealPlayerCards
-> MSG_0x0009-T 4325529109 00031A20
MyPrivateCard 0: c35 [31A20]
MyPrivateCard 1: c36 [31A20]
------ HandID: AD6346F9 0000002D
Table::OnPlayerCards, myCards.changed=0, n=2, flags=0
myCards.changed=1
unexpected Table::TableClientConnection message 0x50
[2019/01/25 01:38:06]
UpdateMyCard 0: c35 [31A20]
UpdateMyCard 1: c36 [31A20]
MsgTracerP: 00000000/8001 - elapsed: 1187 cpu: 0.000000 <TableFrame> THREAD=29788 33/7/1004/29584C02/28E7943F
-> MSG_0x1014-T 4325529109 00031A20
-> MSG_0x1004-T 4325529109 00031A20
  sit0  nCards=2
  sit1  nCards=2
  sit2  nCards=2
  sit3  nCards=2
  sit4  nCards=2
  sit5  nCards=2
  sit6  nCards=2
  sit7  nCards=2
  sit8  nCards=2
  dealerPos=8
UpdateMyCard 0: c35 [31A20]
UpdateMyCard 1: c36 [31A20]
-> MSG_0x0014-T 4325529109 00031A20
configAdvActions 00031A20



----
recurring 31A20 translated to 203296 - is unique per table
some kind of thread identifier?

Every second where something happens is timestamped before a message is sent.
Timestamp does not indicate a chunk but it is useful to determine when to start recording message (preferable over just waiting x seconds, which is unreliable w/ large files)



CONFIRMED 31A20 references the window handle of the table, WOO ^^
examples:
UpdateMyCard 0: c35 [31A20]
-> MSG_0x0009-T 4325529109 00031A20

---
Table close pops:
Table::_shutdown( 1 ) 000E13DE
table window 000E13DE has been destroyed
